const COLOR_MAP = {
    250: '#545454',
    251: '#767676',
    8: '#808080',
    252: '#989898',
    253: '#BBBBBB',
    9: '#C0C0C0',
    254: '#DDDDDD',
    7: '#FFFFFF',
    255: '#FFFFFF',
    248: '#26000A',
    249: '#261318',
    247: '#4D2630',
    243: '#A65368',
    240: '#FF0040',
    244: '#800020',
    245: '#804050',
    242: '#A60029',
    246: '#4D0013',
    241: '#FF809F',
    18: '#260000',
    16: '#4D0000',
    19: '#261313',
    14: '#800000',
    12: '#A60000',
    17: '#4D2626',
    1: '#FF0000',
    10: '#FF0000',
    15: '#804040',
    13: '#A65353',
    11: '#FF8080',
    21: '#FF9F80',
    26: '#4D1300',
    22: '#A62900',
    24: '#802000',
    25: '#805040',
    20: '#FF4000',
    23: '#A66853',
    27: '#4D3026',
    28: '#260A00',
    29: '#261813',
    37: '#4D3926',
    36: '#4D2600',
    33: '#A67C53',
    31: '#FFBF80',
    38: '#261300',
    34: '#804000',
    32: '#A65300',
    35: '#806040',
    30: '#FF8000',
    39: '#261D13',
    49: '#262113',
    46: '#4D3900',
    47: '#4D4326',
    42: '#A67C00',
    43: '#A69153',
    41: '#FFDF80',
    40: '#FFBF00',
    44: '#806000',
    45: '#807040',
    48: '#261D00',
    58: '#262600',
    59: '#262613',
    56: '#4D4D00',
    57: '#4D4D26',
    54: '#808000',
    55: '#808040',
    52: '#A6A600',
    53: '#A6A653',
    2: '#FFFF00',
    50: '#FFFF00',
    51: '#FFFF80',
    68: '#1D2600',
    64: '#608000',
    65: '#708040',
    60: '#BFFF00',
    61: '#DFFF80',
    62: '#7CA600',
    63: '#91A653',
    67: '#434D26',
    66: '#394D00',
    69: '#212613',
    79: '#1D2613',
    70: '#80FF00',
    78: '#132600',
    74: '#408000',
    75: '#608040',
    72: '#53A600',
    71: '#BFFF80',
    73: '#7CA653',
    76: '#264D00',
    77: '#394D26',
    88: '#0A2600',
    89: '#182613',
    87: '#304D26',
    83: '#68A653',
    80: '#40FF00',
    84: '#208000',
    85: '#508040',
    82: '#29A600',
    86: '#134D00',
    81: '#9FFF80',
    98: '#002600',
    99: '#132613',
    96: '#004D00',
    97: '#264D26',
    94: '#008000',
    92: '#00A600',
    95: '#408040',
    93: '#53A653',
    3: '#00FF00',
    90: '#00FF00',
    91: '#80FF80',
    101: '#80FF9F',
    106: '#004D13',
    102: '#00A629',
    104: '#008020',
    105: '#408050',
    100: '#00FF40',
    103: '#53A668',
    107: '#264D30',
    108: '#00260A',
    109: '#132618',
    117: '#264D39',
    116: '#004D26',
    113: '#53A67C',
    111: '#80FFBF',
    118: '#002613',
    114: '#008040',
    115: '#408060',
    112: '#00A653',
    110: '#00FF80',
    119: '#13261D',
    129: '#132621',
    126: '#004D39',
    127: '#264D43',
    122: '#00A67C',
    123: '#53A691',
    121: '#80FFDF',
    120: '#00FFBF',
    124: '#008060',
    125: '#408070',
    128: '#00261D',
    138: '#002626',
    139: '#132626',
    136: '#004D4D',
    137: '#264D4D',
    134: '#008080',
    135: '#408080',
    132: '#00A6A6',
    133: '#53A6A6',
    4: '#00FFFF',
    130: '#00FFFF',
    131: '#80FFFF',
    148: '#001D26',
    144: '#006080',
    145: '#407080',
    140: '#00BFFF',
    141: '#80DFFF',
    142: '#007CA6',
    143: '#5391A6',
    147: '#26434D',
    146: '#00394D',
    149: '#132126',
    159: '#131D26',
    150: '#0080FF',
    158: '#001326',
    154: '#004080',
    152: '#0053A6',
    155: '#406080',
    151: '#80BFFF',
    153: '#537CA6',
    156: '#00264D',
    157: '#26394D',
    168: '#000A26',
    169: '#131826',
    167: '#26304D',
    163: '#5368A6',
    160: '#0040FF',
    164: '#002080',
    165: '#405080',
    162: '#0029A6',
    166: '#00134D',
    161: '#809FFF',
    178: '#000026',
    176: '#00004D',
    174: '#000080',
    172: '#0000A6',
    179: '#131326',
    5: '#0000FF',
    170: '#0000FF',
    177: '#26264D',
    175: '#404080',
    173: '#5353A6',
    171: '#8080FF',
    181: '#9F80FF',
    186: '#13004D',
    182: '#2900A6',
    184: '#200080',
    185: '#504080',
    180: '#4000FF',
    183: '#6853A6',
    187: '#30264D',
    188: '#0A0026',
    189: '#181326',
    197: '#39264D',
    196: '#26004D',
    193: '#7C53A6',
    191: '#BF80FF',
    198: '#130026',
    194: '#400080',
    192: '#5300A6',
    195: '#604080',
    190: '#8000FF',
    199: '#1D1326',
    209: '#211326',
    206: '#39004D',
    207: '#43264D',
    202: '#7C00A6',
    203: '#9153A6',
    201: '#DF80FF',
    200: '#BF00FF',
    204: '#600080',
    205: '#704080',
    208: '#1D0026',
    218: '#260026',
    219: '#261326',
    216: '#4D004D',
    214: '#800080',
    217: '#4D264D',
    212: '#A600A6',
    215: '#804080',
    6: '#FF00FF',
    210: '#FF00FF',
    213: '#A653A6',
    211: '#FF80FF',
    228: '#26001D',
    224: '#800060',
    225: '#804070',
    220: '#FF00BF',
    221: '#FF80DF',
    222: '#A6007C',
    223: '#A65391',
    227: '#4D2643',
    226: '#4D0039',
    229: '#261321',
    239: '#26131D',
    230: '#FF0080',
    238: '#260013',
    234: '#800040',
    232: '#A60053',
    235: '#804060',
    231: '#FF80BF',
    233: '#A6537C',
    236: '#4D0026',
    237: '#4D2639',
    256: '#FFFFFF'

}

class MColor {
    constructor(index, isFill = false) {
        this.index = index
        this.isFill = isFill
    }

    get color() {
        return COLOR_MAP[this.index] || (this.isFill ? 'none' : '#FFF')
    }

    set color(color) {
        this.findKey(COLOR_MAP, color)
    }

    findKey(obj, value, compare = (a, b) => a === b) {
        return Object.keys(obj).find(k => compare(obj[k], value))
    }
}

export default MColor
